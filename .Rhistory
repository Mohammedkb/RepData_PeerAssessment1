hist(subset(pollution,region=="west")$pm25,col="green")
par(mfrow=c(2,1),mar=c(4,4,2,1))
hist(subset(pollution,region=="west")$pm25,col="green")
with(pollution,plot(latitude,pm25))
with(pollution,plot(latitude,pm25))
abline(h=12)
abline(h=12,lwd=2)
abline(h=12,lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
abline(h=12,lwd=2)
with(pollution,plot(latitude,pm25,col=region))
with(subset(pollution,region=="west"),plot(latitude,pm25))
with(subset(pollution,region=="west"),plot(latitude,pm25,main="west"))
with(subset(pollution,region=="east"),plot(latitude,pm25,main="east"))
par(mfrow(1,2))
par(mfrow=c(1,2))
with(subset(pollution,region=="west"),plot(latitude,pm25,main="west"))
with(subset(pollution,region=="east"),plot(latitude,pm25,main="east"))
par(mfrow=c(1,2),mar=c(4,4,2,1))
with(subset(pollution,region=="west"),plot(latitude,pm25,main="west"))
with(subset(pollution,region=="east"),plot(latitude,pm25,main="east"))
par(mfrow=c(1,2),mar=c(5,4,2,1))
with(subset(pollution,region=="west"),plot(latitude,pm25,main="west"))
with(subset(pollution,region=="east"),plot(latitude,pm25,main="east"))
library(datasets)
data(cars)
with(cars,plot(speed,dist))
library(lattice)
state<-data.frame(state.x77,region=state.region)
View(state)
View(state)
xyplot(Life.Exp~Income | region,data=state)
xyplot(Life.Exp~Income | region,data=state,layout = c(4,1))
xyplot(Life.Exp~Income | region,data=state,layout = c(1,4))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data(mpg)
library(datasets)
data(mpg)
data(cars)
head(cars)
qplot(speed,dist,data=cars)
gplot(speed,dist,data=cars)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(dataset)
library(datasets)
data(cars)
head(cars)
gplot(speed,dist,data=cars)
qplot(speed,dist,data=cars)
install.packages("ggplot2",dep=TRUE)
library(ggplot2)
library(ggplot2)
install.packages("munsell")
library(ggplot2)
library("ggplot2", lib.loc="~/R/win-library/3.1")
install.packages(c("Hmisc", "KernSmooth", "manipulate"))
library(ggplot2)
install.packages("munsell")
library(ggplot2)
library(ggplot2)
library(datasets)
data(cars)
qplot(speed,dist,data=cars)
library(datasets)
dataset(airquality)
datasets(airquality)
hist(airquality$Ozone)
with(airquality,plot(Wind,Ozone))
?transform
head(airquality)
airquality<-transform(airquality,Month=factor(Month))
View(airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb")
colors()
par("lty")
par("mar")
par("col")
par("pch")
with(airquality,plot(Wind,Ozone))
with(airquality,plot(Wind,Ozone))
title(main="Ozone vs wind in NY")
with(airquality,plot(Wind,Ozone,main="Wind Vs Ozone"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
with(airquality,plot(Wind,Ozone,main="Wind Vs Ozone",type="n"))
with(subset(airquality,Month==5),points(Wind,Ozone,col="blue"))
with(subset(airquality,Month==!5),points(Wind,Ozone,col="red"))
with(subset(airquality,Month!==5),points(Wind,Ozone,col="red"))
with(subset(airquality,Month!=5),points(Wind,Ozone,col="red"))
legend("topright",pch=1,col=c("blue","red"),legend=c("May","Others"))
with(airquality,plot(Wind,Ozone,main="Wind Vs Ozone",pch=20))
model<-lm(Ozone~Wind,airquality)
abline(model,lwd=2)
par(mfrow=c(1,2))
with(airquality,{})
par(mfrow=c(1,2))
with(airquality,{
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar R")
})
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(airquality,{
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar R")
plot(Temp,Ozone,main="Temperature and Ozone")
mtext("Weather in New York",outer=TRUE)
})
x<-rnorm(100)
hist(x)
y<-rnorm(100)
plot(x,y)
z<-rnorm(100)
plot(x,z)
par("mar")
par(mar=c(2,2,2,2))
plot(x,y)
par(mar=c(4,4,2,2))
plot(x,y)
plot(x,y,pch=1)
plot(x,y,pch=2)
plot(x,y,pch=3)
plot(x,y,pch=4)
plot(x,y,pch=20)
plot(x,y,pch=19)
example(points)
x<-rnorm(100)
y<-rnorm(100)
plot(x,y,pch=20)
title("Scatterplot")
text(-2,2,"MyLabel")
legend("topright",legend="Data",pch=20)
model<-lm(y~x)
abline(model)
abline(model,lwd=3)
abline(model,lwd=3,col="blue")
x<-rnorm(100)
y<-x+rnorm(100)
par(mfrow=c(1,1))
g<-gl(2,50,labels=c("Male","Female"))
str(g)
plot(x,y)
plot(x,y,type="n")
points(x[g=="Male"],y[g=="Female"])
points(x[g=="Male"],y[g=="Female"],col="blue")
points(x[g=="Male"],y[g=="Male"],col="blue")
library(datasets)
with(faithful,plot(eruptions,waiting))
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
with(faithful,plot(eruptions,waiting))
dev.copy(png,file="myplotimage.png")
dev.off()
library(lattice)
library(datasets)
xyplot(Ozone~Wind,data=airquality)
airquality<-transform(airquality,Month=factor(Month))
xyplot(Ozone~Wind|Month,data=airquality,layout=c(5,1))
set.seed(10)
x<-rnrom(100)
x<-rnorm(100)
f<-rep(0:1,each=50)
y<-x+f-f*x+rnorm(100,sd=.5)
f<-factor(f,labels=c("Group 1","Group 2"))
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x,|f,panel=function(x,y,...))
xyplot(y~x,|f,panel=function(x,y,...){}
xyplot(y~x,|f,panel=function(x,y,...){}
xyplot(y~x|f,panel=function(x,y,...){}
xyplot(y~x|f,panel=function(x,y,...){
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.abline(h=median(y))
panel.abline(h=median(y),lty=2)
})
panel.abline(h=median(y),lty=1)
panel.abline(h=median(y),lty=1)
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
xyplot(y~x|f,panel=function(x,y,...){
panel.xyplot(x,y,...)
panel.lmline(x,y,col=3)
})
getwd()
library(ggplot2)
str(mpg)
qplot(displ.hwy,data=mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(hwy,data=mpg,color=drv)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(disp,hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(displ,hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
testdata<-data.frame(x=1:100,y=rnorm(100))
testdata[50,2]<-100
plot(testdata$x,testdata$y,type="l")
plot(testdata$x,testdata$y,type="l",ylim=c(-3,3))
g<-ggplot(testdata,aes(x=x,y=y))
g+geom_line()
g+geom_line()+coord_cartesian(ylim=c(-3,3))
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame<-data.frame(x=x,y=y)
View(dataFrame)
dist(dataFrame)
dataFrame(x=x,y=y)
dataFrame<-data.frame(x=x,y=y)
distxy<-dist(dataFrame)
hClust<-hclust(distxy)
plot(hClust)
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...) {
## modifiction of plclust for plotting hclust objects *in colour*!  Copyright
## Eva KF Chan 2009 Arguments: hclust: hclust object lab: a character vector
## of labels of the leaves of the tree lab.col: colour for the labels;
## NA=default device foreground colour hang: as in hclust & plclust Side
## effect: A display of hierarchical cluster with coloured leaf labels.
y <- rep(hclust$height, 2)
x <- as.numeric(hclust$merge)
y <- y[which(x < 0)]
x <- x[which(x < 0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels = FALSE, hang = hang, ...)
text(x = x, y = y[hclust$order] - (max(hclust$height) * hang), labels = lab[hclust$order],
col = lab.col[hclust$order], srt = 90, adj = c(1, 0.5), xpd = NA, ...)
}
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
myplclust(hClust, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
heatmap(dataMatrix)
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
dataFrame<-data.frame(x,y)
View(dataFrame)
kmeansObj<-kmeans(dataFrame)
kmeansObj<-kmeans(dataFrame,centers = 3)
names(kmeansObj)
kmeansObj$Cluster
kmeansObj$cluster
kmeansObj$centers
par(mar=rep(.2,4))
plot(x,y,col=kmeansObj$cluster,pch=19,cex=2)
points(kmeansObj$centers,col=1:3,pch=3,lwd=3)
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12), ]
kmeansObj2 <- kmeans(dataMatrix, centers = 3)
par(mfrow = c(1, 2), mar = c(2, 4, 0.1, 0.1))
image(t(dataMatrix)[, nrow(dataMatrix):1], yaxt = "n")
image(t(dataMatrix)[, order(kmeansObj$cluster)], yaxt = "n")
set.seed(12345)
par(mar = rep(0.2, 4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
dataMatrix
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
heatmap(dataMatrix)
set.seed(678910)
for (i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0, 3), each = 5)
}
}
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
par(mar = rep(0.2, 4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
par(mar = rep(0.2, 4))
image(1:10, 1:40, t(dataMatrix)[, nrow(dataMatrix):1])
par(mar=rep(.2,4))
heatmap(dataMatrix)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
library(ggplot2)
library(datasets)
qplot(hwy,data=mpg,facets = drv~.,binwidth=2)
qplot(hwy,data=mpg,facets = .~drv,binwidth=2)
a<-seq(0,1,length=11)
a
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(nlme)
str(nlme)
nlme
head(BodyWeight)
tail(BodyWeight)
str(BodyWeight)
library(airquality)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?trellis.par.get
?par
?trellis.par.get
?print.trellis
?splom
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
g <- ggplot(movies, aes(votes, rating))+geom_point
g+geom_point
g <- ggplot(movies, aes(votes, rating))
g+geom_point
g+geom_point()
p<-g+geom_point()
print(p)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies)+geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies,geom="smooth")
qplot(votes, rating, data = movies,geom=c("points","smooth")
qplot(votes, rating, data = movies,geom=c("points","smooth")
qplot(votes, rating, data = movies,geom=c("points","smooth"))
qplot(votes, rating, data = movies,geom=c("point","smooth"))
rm(list=ls())
library(grDevices)
colors()
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(.5)
pal(.2)
pal(seq(0,1,len=10))
pal(.9)
a<-seq(0,1,len=10)
a
pal(.88888889)
oal<-colorRampPalette(c("red","yellow"))
pal<-colorRampPalette(c("red","yellow"))
pal(2)
pal(10)
pal(20)
installed.packages("RColorBrewer")
install.packages("RColorBrewer")
library(RColorBrewer)
cols<-brewer.pal(3,"BuGn")
cols
pal<-colorRampPalette(cols)
image(volcano,col=pal(20))
x<-rnorm(10000)
y<-rnorm(10000)
smoothScatter(x,y)
plot(x,y,pch=19)
plot(x,y,pch=19,col=rgb(0,0,0,.2))
plot(x,y,pch=19,col=rgb(0,0,0,.1))
load("C:/Users/PC/OneDrive/Data Science/Data Science Specialization Track/3. Exploratory Data Analysis/AirPollutionCS/.RData")
dim(cnt0)
dim(pm0sub)
library(plyr)
?ddply
?numcolwise
setwd("C:/Users/PC/OneDrive/Data Science/Data Science Specialization Track/3. Exploratory Data Analysis/CourseProject2/exdata_data_NEI_data")
library(plyr)
maindata <- readRDS("summarySCC_PM25.rds")
plusdata <- readRDS("Source_Classification_Code.rds")
maindataplot <- ddply(maindata, "year", numcolwise(sum))
png("plot1.png", width=1024, height=640, res=240)
par(las=1, cex.axis=0.6, cex.lab=0.6, cex.main=0.8)
plot(maindataplot$year, maindataplot$Emissions, type="b", main="Total Emissions PM2.5 US 1999-2008", xlab="Year", ylab="Tons", col="blue")
dev.off()
View(maindataplot)
View(maindata)
str(maindata$year)
str(maindata$Emissions)
?par
setwd("C:/Users/PC/OneDrive/Data Science/Data Science Specialization Track/3. Exploratory Data Analysis")
rm(list=ls())
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
df0<-data.frame(x=x,y=y)
View(df0)
dist(df0)
distxy<-dist(df0)
hClustering<-hclust(distxy)
plot(hClustering)
source("myplclust.R")
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
dm0<-as.matrix(df0)[sample(1:12),]
View(dm0)
View(df0)
heatmap(dm0)
rm(list=ls())
set.seed(1234)
par(mar = c(0, 0, 0, 0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y + 0.05, labels = as.character(1:12))
df0<-data.frame(x=x,y=y)
km<-kmeans(df0,centers = 3)
names(km)
km$cluster
km$centers
par(mar=.2,4)
par(mar=rep(.2,4))
plot(x,y,col=km$cluster,pch=19)
plot(x,y,col=km$cluster,pch=19,cex=2)
points(km$centers,col=1:3,pch=3,cex=3,lwd=3)
points(km$centers,col=1:3,pch=3,cex=2,lwd=3)
points(km$centers,col=1:3,pch=3,cex=1,lwd=3)
points(km$centers,col=1:3,pch=3,cex=1,lwd=1)
install.packages("kernlab")
library(kernlab)
data(spam)
View(spam)
str(spam)
str(spam[,1:5])
View(spam)
set.seed(3435)
trainIndicator=rbinom(4601,size=1,prob = .5)
table(trainIndicator)
library(kernbal)
library(kenbal)
library(kernlab)
data(spam)
set.seed(3435)
trainIndicator=rbinom(4601,size=1,prob = .5)
table(trainIndicator)
trainSpam=spam[trainIndicator==1,]
testSpam=spam[trainIndicator==0,]
View(testSpam)
names(trainSpam)
View(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve~trainSpam$type)
plot(log10(trainSpam$capitalAve)~trainSpam$type)
plot(log10(trainSpam$capitalAve+1)~trainSpam$type)
plot(log10(trainSpam$capitalAve)~trainSpam$type)
plot(log10(trainSpam[,1:4]+1))
hCluster=hclust(dist(t(trainSpam[,1:57])))
plot(hClust)
plot(hCluster)
hCluster=hclust(dist(t(log10(trainSpam[,1:57]+1)))
hCluster=hclust(dist(t(log10(trainSpam[,1:57]+1))))
hCluster=hclust(dist(t(log10(trainSpam[,1:57]+1))))
plot(hCLuster)
plot(hCluster)
hCluster=hclust(dist(t(log10(trainSpam[,1:55]+1))))
plot(hCluster)
trainSpam$numType = as.numeric(trainSpam$type) - 1
costFunction = function(x, y) sum(x != (y > 0.5))
cvError = rep(NA, 55)
library(boot)
for (i in 1:55) {
lmFormula = reformulate(names(trainSpam)[i], response = "numType")
glmFit = glm(lmFormula, family = "binomial", data = trainSpam)
cvError[i] = cv.glm(trainSpam, glmFit, costFunction, 2)$delta[2]
}
## Which predictor has minimum cross-validated error?
names(trainSpam)[which.min(cvError)]
## Use the best model from the group
predictionModel = glm(numType ~ charDollar, family = "binomial", data = trainSpam)
## Get predictions on the test set
predictionTest = predict(predictionModel, testSpam)
predictedSpam = rep("nonspam", dim(testSpam)[1])
## Classify as `spam' for those with prob > 0.5
predictedSpam[predictionModel$fitted > 0.5] = "spam"
table(predictedSpam, testSpam$type)
(61 + 458)/(1346 + 458 + 61 + 449)
setwd("C:/Users/PC/OneDrive/Data Science/Data Science Specialization Track/4. Reproducible Research")
install.packages("kernlab")
setwd("D:/Data Science/RR_PA_1_Project/RepData_PeerAssessment1")
library(knitr)
knit2html("PA1_template.Rmd")
